{"version":3,"sources":["components/MyPieChart.js","components/Avatar.js","components/GithubApp.js","components/About.js","components/Header.js","components/Footer.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["MyPieChart","languages","userfullname","title","width","height","chartType","loader","data","options","Avatar","imgSrc","this","props","src","className","Image","alt","roundedCircle","Component","GithubApp","useState","username","setUsername","setLanguages","fetching","setFetching","errormsg","setErrormsg","setUserfullname","avatarsrc","setAvatarsrc","followers","setFollowers","following","setFollowing","myHeaders","Headers","authHeader","btoa","process","append","requestOptions","method","headers","redirect","fetchUser","event","a","preventDefault","fetch","resp","json","user","name","avatar_url","fetchUserdetails","userRepositories","length","languageMap","Map","forEach","repo","language","has","set","get","l","push","value","key","onSubmit","type","placeholder","onChange","target","fontSize","onClick","id","About","href","Header","to","Footer","Home","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fa6e9b4b.chunk.js","sourcesContent":["import React from 'react';\nimport { Chart } from \"react-google-charts\";\n\nconst MyPieChart = ({languages, userfullname}) => {\n\n    const title = `${userfullname}'s preferred Languages`;\n\n    return(\n\n        <div>\n\n            <Chart\n                width={'500px'}\n                height={'300px'}\n                chartType=\"PieChart\"\n                loader={<div>Loading Chart</div>}\n                data={languages}\n                options={{\n                    title: title\n                }}\n            />\n\n        </div>\n    );\n}\n\nexport default MyPieChart;\n","import React, { Component } from 'react';\nimport './Avatar.scss';\nimport Image from 'react-bootstrap/Image';\n\nclass Avatar extends Component {\n\n    render() {\n\n        const imgSrc = this.props.src;\n\n        return(\n            <div className=\"avatarContainer\">\n                <Image alt=\"userImage\" src={imgSrc} roundedCircle />\n            </div>\n        )\n    }\n}\n\nexport default Avatar;\n","import React, { useState } from 'react';\nimport MyPieChart from './MyPieChart';\nimport Avatar from './Avatar';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst GithubApp = () => {\n    const [username, setUsername] = useState(\"\");\n    const [languages, setLanguages] = useState([]);\n    const [fetching, setFetching] = useState(false);\n    const [errormsg, setErrormsg] = useState(\"\");\n    const [userfullname, setUserfullname] = useState(\"\");\n    const [avatarsrc, setAvatarsrc] = useState(\"\");\n    const [followers, setFollowers] = useState(0);\n    const [following, setFollowing] = useState(0);\n\n    const myHeaders = new Headers();\n    const authHeader = \"Basic \" + btoa(process.env.REACT_APP_GITHUB_CLIENT_ID + \":\" + process.env.REACT_APP_GITHUB_CLIENT_SECRET);\n    myHeaders.append(\"Authorization\", authHeader);\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n\n    const handleChange = (event) => {\n        setUsername(event.target.value);\n    }\n\n    const fetchUser = async (event) => {\n        event.preventDefault();\n        setFetching(true);\n        const resp = await fetch(`https://api.github.com/users/${username}`, requestOptions);\n        const user = await resp.json();\n        if(user) {\n            setUserfullname(user.name);\n            setAvatarsrc(user.avatar_url);\n            setFollowers(user.followers);\n            setFollowing(user.following);\n        } else {\n            setErrormsg(\"Not a valid user\");\n        }\n\n        fetchUserdetails();\n        setFetching(false);\n    }\n\n    const fetchUserdetails = async () => {\n        setFetching(true);\n        const resp = await fetch(`https://api.github.com/users/${username}/repos`, requestOptions);\n        const userRepositories = await resp.json();\n        if(userRepositories && userRepositories.length > 0) {\n            const languageMap = new Map();\n            userRepositories.forEach((repo) => {\n                if(repo.language) {\n                    if(languageMap.has(repo.language)) {\n                        languageMap.set(repo.language, languageMap.get(repo.language)+1);\n                    } else {\n                        languageMap.set(repo.language, 1);\n                    }\n                }\n            });\n            setLanguages([]);\n            const l = [];\n            l.push([\"Languages\", \"Count\"]);\n            languageMap.forEach((value, key) => {\n                l.push([key, value]);\n\n            });\n            setLanguages(languages => l);\n        } else {\n            setErrormsg(\"Not a valid user\");\n        }\n        setFetching(false);\n    }\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={fetchUser}>\n              <h3>Who are you searching for?</h3>\n              <div className=\"search-bar\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter User's Github username\"\n                  value={username}\n                  onChange={handleChange}\n                />\n                <SearchIcon fontSize=\"large\" onClick={fetchUser}/>\n              </div>\n            </form>\n            <div>\n                {errormsg}\n            </div>\n            <div>\n                {languages.length > 0 && !fetching\n                    &&\n                    <div>\n                        <div className=\"user-info\">\n                            {\n                                avatarsrc &&\n                                <Avatar src={avatarsrc} />\n                            }\n                            {\n                                userfullname &&\n                                <span><br/>{userfullname}</span>\n                            }\n                            {\n                                followers &&\n                                <p>Followers: {followers}</p>\n                            }\n                            {\n                                following &&\n                                <p>Following {following}</p>\n                            }\n                        </div>\n                        <MyPieChart languages={languages} userfullname={username} id=\"chart\" />\n                    </div>\n                }\n            </div>\n\n        </div>\n    )\n};\n\nexport default GithubApp;\n","import React from 'react';\n\nconst About = () => {\n\n  return(\n    <div className=\"about\">\n      <h2>About Us</h2>\n        <p>The Power of Babel is based on Tejas Shah's <a target=\"blank\" href=\"https://www.mintbean.io/project/506f7411-bdb1-4d34-b925-260e0d90589b\">original project</a> a mintbean.io hackathon.</p>\n        <p>His project User's Favorite Language used the Github API to find a user's favorite languages to code in based on their. contributions to public Github repositories.</p>\n        <img src=\"https://i.imgur.com/6YRcYC2.png\" alt=\"the original project made by Tejas Shah\"/>\n        <p>The Power of Babel expands upon his original work with extra UX and UI additions to turn it into a single page application.</p>\n    </div>\n  )\n\n}\n\nexport default About;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport HomeIcon from '@material-ui/icons/Home';\nimport InfoIcon from '@material-ui/icons/Info';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst Header = () => {\n\n  return(\n    <header>\n      <h2>The Power of Babel</h2>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">\n              <HomeIcon fontSize=\"large\"/>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/app\">\n              <SearchIcon fontSize=\"large\"/>\n            </Link>\n          </li>\n          <li>\n            <Link to='/about'>\n            <InfoIcon fontSize=\"large\"/>\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  )\n\n}\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = () => {\n\n  return(\n    <footer>\n      <p>Styled by: <a href=\"https://github.com/joshuasoave\">Josh Soave</a>\n      <span>Photo by <a href=\"https://unsplash.com/@markusspiske?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Markus Spiske</a> on <a href=\"https://unsplash.com/s/photos/language?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span>\n      </p>\n    </footer>\n  )\n\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n\n  return(\n    <div className=\"home-page\">\n      <h2>Welcome to The Power of Babel!</h2>\n      <Link to=\"/app\">\n        <img id=\"home-img\" src=\"https://images.unsplash.com/photo-1489389944381-3471b5b30f04?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\" alt=\"computer code in a text editor\"/>\n      </Link>\n      <h4>An application to find a Github user's favorite coding languages.</h4>\n    </div>\n  )\n\n}\n\nexport default Home;\n","import React from 'react';\nimport './main.css';\nimport GithubApp from './components/GithubApp';\nimport About from './components/About';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Home from './components/Home';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header/>\n        <main>\n          <Route path=\"/\"\n          exact component={Home}/>\n          <Route path=\"/GithubApp\"\n          component={Home}/>\n          <Route path=\"/about\"\n          component={About}/>\n          <Route path=\"/app\"\n          component={GithubApp}/>\n        </main>\n        <Footer/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}